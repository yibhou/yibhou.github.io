(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{318:function(t,s,a){t.exports=a.p+"assets/img/object2string.e1d1a792.png"},319:function(t,s,a){t.exports=a.p+"assets/img/object2number.e83b2e0c.png"},320:function(t,s,a){t.exports=a.p+"assets/img/scope-chain.032d5a5b.png"},354:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[n("em",[t._v("本文目的是对原书（《JavaScript权威指南》第六版）中的一些错误或疑惑点进行纠正与补充，以及记录一些重要的知识点。文章中的标题序号与书籍目录序号保持一致。")])])]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#_2-词法结构"}},[t._v("2 词法结构")]),n("ul",[n("li",[n("a",{attrs:{href:"#_2-1-字符集"}},[t._v("2.1 字符集")])]),n("li",[n("a",{attrs:{href:"#_2-5-可选的分号"}},[t._v("2.5 可选的分号")])])])]),n("li",[n("a",{attrs:{href:"#_3-类型、值和变量"}},[t._v("3 类型、值和变量")]),n("ul",[n("li",[n("a",{attrs:{href:"#_3-1-数字"}},[t._v("3.1 数字")]),n("ul",[n("li",[n("a",{attrs:{href:"#_3-1-3-javascript中的算术运算"}},[t._v("3.1.3 JavaScript中的算术运算")])])])]),n("li",[n("a",{attrs:{href:"#_3-6-包装对象"}},[t._v("3.6 包装对象")])]),n("li",[n("a",{attrs:{href:"#_3-8-类型转换"}},[t._v("3.8 类型转换")]),n("ul",[n("li",[n("a",{attrs:{href:"#_3-8-1-转换和相等性"}},[t._v("3.8.1 转换和相等性")])]),n("li",[n("a",{attrs:{href:"#_3-8-2-显式类型转换"}},[t._v("3.8.2 显式类型转换")])]),n("li",[n("a",{attrs:{href:"#_3-8-3-对象转换为原始值"}},[t._v("3.8.3 对象转换为原始值")])])])]),n("li",[n("a",{attrs:{href:"#_3-10-变量作用域"}},[t._v("3.10 变量作用域")]),n("ul",[n("li",[n("a",{attrs:{href:"#_3-10-1-函数作用域和声明提前"}},[t._v("3.10.1 函数作用域和声明提前")])]),n("li",[n("a",{attrs:{href:"#_3-10-2-作为属性的变量"}},[t._v("3.10.2 作为属性的变量")])]),n("li",[n("a",{attrs:{href:"#_3-10-3-作用域链"}},[t._v("3.10.3 作用域链")])])])])])]),n("li",[n("a",{attrs:{href:"#_4-表达式和运算符"}},[t._v("4 表达式和运算符")]),n("ul",[n("li",[n("a",{attrs:{href:"#_4-7-运算符概述"}},[t._v("4.7 运算符概述")]),n("ul",[n("li",[n("a",{attrs:{href:"#_4-7-7-运算顺序"}},[t._v("4.7.7 运算顺序")])])])]),n("li",[n("a",{attrs:{href:"#_4-8-算术表达式"}},[t._v("4.8 算术表达式")]),n("ul",[n("li",[n("a",{attrs:{href:"#_4-8-1-运算符"}},[t._v("4.8.1 +运算符")])]),n("li",[n("a",{attrs:{href:"#_4-8-3-位运算符"}},[t._v("4.8.3 位运算符")])])])]),n("li",[n("a",{attrs:{href:"#_4-9-关系表达式"}},[t._v("4.9 关系表达式")]),n("ul",[n("li",[n("a",{attrs:{href:"#_4-9-1-相等和不相等运算符"}},[t._v("4.9.1 相等和不相等运算符")])]),n("li",[n("a",{attrs:{href:"#_4-9-2-比较运算符"}},[t._v("4.9.2 比较运算符")])]),n("li",[n("a",{attrs:{href:"#_4-9-4-instanceof-运算符"}},[t._v("4.9.4 instanceof运算符")])])])]),n("li",[n("a",{attrs:{href:"#_4-12-表达式计算"}},[t._v("4.12 表达式计算")]),n("ul",[n("li",[n("a",{attrs:{href:"#_4-12-1-eval"}},[t._v("4.12.1 eval()")])]),n("li",[n("a",{attrs:{href:"#_4-12-2-全局eval"}},[t._v("4.12.2 全局eval()")])]),n("li",[n("a",{attrs:{href:"#_4-12-3-严格eval"}},[t._v("4.12.3 严格eval()")])])])]),n("li",[n("a",{attrs:{href:"#_4-13-其他运算符"}},[t._v("4.13 其他运算符")]),n("ul",[n("li",[n("a",{attrs:{href:"#_4-13-2-typeof运算符"}},[t._v("4.13.2 typeof运算符")])]),n("li",[n("a",{attrs:{href:"#_4-13-3-delete运算符"}},[t._v("4.13.3 delete运算符")])])])])])]),n("li",[n("a",{attrs:{href:"#_5-语句"}},[t._v("5 语句")]),n("ul",[n("li",[n("a",{attrs:{href:"#_5-2-复合语句和空语句"}},[t._v("5.2 复合语句和空语句")])]),n("li",[n("a",{attrs:{href:"#_5-3-声明语句"}},[t._v("5.3 声明语句")]),n("ul",[n("li",[n("a",{attrs:{href:"#_5-3-2-function"}},[t._v("5.3.2 function")])])])]),n("li",[n("a",{attrs:{href:"#_5-5-循环"}},[t._v("5.5 循环")]),n("ul",[n("li",[n("a",{attrs:{href:"#_5-5-3-for"}},[t._v("5.5.3 for")])]),n("li",[n("a",{attrs:{href:"#_5-5-4-for-in"}},[t._v("5.5.4 for/in")])])])]),n("li",[n("a",{attrs:{href:"#_5-6-跳转"}},[t._v("5.6 跳转")]),n("ul",[n("li",[n("a",{attrs:{href:"#_5-6-1-标签语句"}},[t._v("5.6.1 标签语句")])]),n("li",[n("a",{attrs:{href:"#_5-6-2-break语句"}},[t._v("5.6.2 break语句")])]),n("li",[n("a",{attrs:{href:"#_5-6-3-continue语句"}},[t._v("5.6.3 continue语句")])]),n("li",[n("a",{attrs:{href:"#_5-6-5-throw语句"}},[t._v("5.6.5 throw语句")])]),n("li",[n("a",{attrs:{href:"#_5-6-6-try-catch-finally语句"}},[t._v("5.6.6 try/catch/finally语句")])])])]),n("li",[n("a",{attrs:{href:"#_5-7-其他语句类型"}},[t._v("5.7 其他语句类型")]),n("ul",[n("li",[n("a",{attrs:{href:"#_5-7-1-with语句"}},[t._v("5.7.1 with语句")])]),n("li",[n("a",{attrs:{href:"#_5-7-3-use-strict-指令"}},[t._v('5.7.3 "use strict"指令')])])])])])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"_2-词法结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-词法结构"}},[t._v("#")]),t._v(" 2 词法结构")]),t._v(" "),n("h3",{attrs:{id:"_2-1-字符集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-字符集"}},[t._v("#")]),t._v(" 2.1 字符集")]),t._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("纠正")]),t._v(" "),n("p",[n("em",[t._v("Page 38")]),t._v(" -> 零宽非连接符为"),n("code",[t._v("\\u200C")])])]),t._v(" "),n("h3",{attrs:{id:"_2-5-可选的分号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-可选的分号"}},[t._v("#")]),t._v(" 2.5 可选的分号")]),t._v(" "),n("p",[t._v("通常来讲，如果一条语句以“(”、“[”、“/”、“+”或“-”开始，那么它极有可能和前一条语句和在一起解析。例如：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将解析为 var y = x + f(a + b).toString()")]),t._v("\n")])])]),n("p",[t._v("所以如果遇到以这些符号开始，最好在语句前显式加上分号，这样哪怕之前的语句被怎么修改也不会出现误解析的情况：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" f\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("一般情况，JavaScript会合并解析下一行语句直到无法合并为止，但有两个例外情况。第一个例外是在"),n("code",[t._v("return")]),t._v("、"),n("code",[t._v("break")]),t._v("和"),n("code",[t._v("continue")]),t._v("这三个关键字后紧跟着换行时，JavaScript则会在换行处填补分号，例如：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本意是 return true; 但会解析为 return; true;")]),t._v("\n")])])]),n("p",[t._v("第二个例外是在涉及“"),n("code",[t._v("++")]),t._v("”和“"),n("code",[t._v("--")]),t._v("”运算符时，运算符可作为表达式的前缀，也可当做表达式的后缀使用。例如：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("x\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\ny\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将解析为 x; ++y; 而不是 x++; y;")]),t._v("\n")])])]),n("h2",{attrs:{id:"_3-类型、值和变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-类型、值和变量"}},[t._v("#")]),t._v(" 3 类型、值和变量")]),t._v(" "),n("p",[t._v("JavaScript的数据类型分为：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("原始类型")]),t._v("：数字、字符串、布尔值、null 和 undefined；")]),t._v(" "),n("li",[n("code",[t._v("对象类型")]),t._v("：对象、数组、函数。")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[n("code",[t._v("null")]),t._v(" 和 "),n("code",[t._v("undefined")]),t._v(" 不能拥有方法，但数字、字符串和布尔值可以通过包装对象拥有自己的方法。"),n("a",{attrs:{href:"#_3-6-%E5%8C%85%E8%A3%85%E5%AF%B9%E8%B1%A1"}},[t._v("3.6")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "1"')]),t._v("\n")])])]),n("h3",{attrs:{id:"_3-1-数字"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-数字"}},[t._v("#")]),t._v(" 3.1 数字")]),t._v(" "),n("p",[t._v("JavaScript不区分整数值和浮点数值，所有数字均采用浮点数值表示。能够表示整数的范围在 [-2"),n("sup",[t._v("53")]),t._v(", 2"),n("sup",[t._v("53")]),t._v("] 之间，如果使用超过此范围的整数，则无法保证低位数字的精度。")]),t._v(" "),n("h4",{attrs:{id:"_3-1-3-javascript中的算术运算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-javascript中的算术运算"}},[t._v("#")]),t._v(" 3.1.3 JavaScript中的算术运算")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以10为底100的对数")]),t._v("\nMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LN10")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于")]),t._v("\nMath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 2")]),t._v("\n")])])]),n("p",[t._v("其实就是利用换底公式换算log"),n("sub",[t._v("m")]),t._v("a / log"),n("sub",[t._v("m")]),t._v("b = log"),n("sub",[t._v("b")]),t._v("a，这里的m等于e，即自然对数的底数。")]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("JavaScript中的算术运算，如果超过所能表示数字的范围（"),n("strong",[t._v("溢出")]),t._v("），结果值为正无穷大或负无穷大。如果当运算结果无限接近于零并比JavaScript所能表示的数值还要接近（"),n("strong",[t._v("下溢")]),t._v("），此时会返回0或-0。")]),t._v(" "),n("p",[t._v("任何非零数值被零整除不会报错，它只是简单返回Infinity或-Infinity。")]),t._v(" "),n("p",[t._v("任何无意义的运算如零除以零、无穷大除以无穷大、给任何负数开平方运算或与非数字/无法转换为数字的运算，都将返回NaN。")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[t._v("NaN使用了Significand非零、指数是特定2"),n("sup",[t._v("e")]),t._v("-1且Sign无要求的所有可能，即2"),n("sup",[t._v("53")]),t._v("减去±∞两种情况。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在Chrome, Safari, Firefox, Opera")]),t._v("\nNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 书上是Infinity返回结果为true 实际测试结果是还没溢出")]),t._v("\nNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样才发生溢出！？目前无法找到溢出的临界值")]),t._v("\nNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n")])])]),n("p",[t._v("另外，还有一个注意点：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" zero "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" negz "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正零等于负零")]),t._v("\nzero "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" negz "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正无穷不等于负无穷")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" zero "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" negz "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n")])])]),n("h3",{attrs:{id:"_3-6-包装对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-包装对象"}},[t._v("#")]),t._v(" 3.6 包装对象")]),t._v(" "),n("p",[t._v("数字、字符串和布尔值可以具有属性和方法，例如：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用字符串的属性和方法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" word "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("字符串在调用时通过new String(s)创建一个临时包装对象，一旦调用完成随即销毁这个对象（其实在实现上不一定创建或销毁这个临时对象，然而整个过程看起来是这样）。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于new String(s).len = 4")]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面的临时对象被销毁了")]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("len"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => undefined")]),t._v("\n")])])]),n("h3",{attrs:{id:"_3-8-类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-类型转换"}},[t._v("#")]),t._v(" 3.8 类型转换")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("值")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("字符串")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("数字")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("布尔值")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("对象")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("undefined")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"undefined"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("NaN")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("false")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("throws TypeError")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("null")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"null"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("false")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("throws TypeError")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"true"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("new Boolean(true)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("false")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"false"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("new Boolean(false)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v('""(空字符串)')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("false")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('new String("")')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v('"1.2"(非空,数字)')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("1.2")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('new String("1.2")')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v('"one"(非空,非数字)')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("NaN")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('new String("one")')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"0"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("false")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("new Number(0)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("-0")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"0"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("false")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("new Number(-0)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("NaN")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"NaN"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("false")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("new Number(NaN)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("Infinity")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"Infinity"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("new Number(Infinity)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("-Infinity")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"-Infinity"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("new Number(-Infinity)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("1(有限的,非零)")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"1"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}}),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("new Number(1)")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("{}(任意对象)")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("参考3.8.3节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("参考3.8.3节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("[](任意数组)")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('""')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("[9](1个数字元素)")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v('"9"')]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("['a']")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("使用join()方法")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("NaN")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("function(){}(任意函数)")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("参考3.8.3节")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("NaN")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("true")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 允许开始或结尾处带任意空白符的数字字符串转换为数字")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  1  "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  1  \\n"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1")]),t._v("\n")])])]),n("h4",{attrs:{id:"_3-8-1-转换和相等性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-1-转换和相等性"}},[t._v("#")]),t._v(" 3.8.1 转换和相等性")]),t._v(" "),n("p",[n("code",[t._v("if")]),t._v("语句将undefined转换为false，但"),n("code",[t._v("==")]),t._v("运算符不会试图将其操作数转为为布尔值。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串转换成数字再进行比较")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 布尔值转换成数字再进行比较")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串和布尔值都转换成数字再进行比较")]),t._v("\n")])])]),n("h4",{attrs:{id:"_3-8-2-显式类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-2-显式类型转换"}},[t._v("#")]),t._v(" 3.8.2 显式类型转换")]),t._v(" "),n("p",[t._v("隐式地将"),n("code",[t._v("null")]),t._v("和"),n("code",[t._v("undefined")]),t._v("转换为对象会抛出一个类型错误 (TypeError)，但显式地使用"),n("code",[t._v("Object()")]),t._v("函数进行转换不会抛出异常，仅简单地返回一个新创建的空对象。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => {}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => {}")]),t._v("\n")])])]),n("h4",{attrs:{id:"_3-8-3-对象转换为原始值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-3-对象转换为原始值"}},[t._v("#")]),t._v(" 3.8.3 对象转换为原始值")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包装对象的默认valueOf方法返回原始值，复合值对象则简单返回对象本身")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 123")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => {a: 1, b: 2}")]),t._v("\n")])])]),n("p",[t._v("对象到字符串的转换有以下步骤：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(318),alt:""}})]),t._v(" "),n("p",[t._v("对象到数字的转换，不同的是首先尝试使用valueOf()方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(319),alt:""}})]),t._v(" "),n("p",[t._v("对象转换数字的细节解释了为什么空数组或一个数字元素的数组会被转换成一个数字，因为数组继承的默认valueOf()方法返回的是一个对象而不是原始值，因此需要进一步调用toString()方法，空数组转换完成空字符串，空字符串转换成数字0。")]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),n("p",[t._v("值得注意的是，这里提到的字符串和数字的转换规则只适用于本地对象 (native object)，宿主对象（例如，由Web浏览器定义的对象）根据各自的算法可以转换成字符串和数字。")])]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),n("p",[n("a",{attrs:{href:"#_4-8-1-%E8%BF%90%E7%AE%97%E7%AC%A6"}},[t._v("加法运算符")]),n("code",[t._v("+")]),t._v("、"),n("a",{attrs:{href:"#_4-9-1-%E7%9B%B8%E7%AD%89%E5%92%8C%E4%B8%8D%E7%9B%B8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6"}},[t._v("相等运算符")]),n("code",[t._v("==")]),t._v("的操作数中，日期对象会使用对象到字符串的转换模式，而非日期对象则基本上使用对象到数字的转换模式（首先调用valueOf方法，但不完全一致）。")]),t._v(" "),n("p",[t._v("然而，这里的转换和上文讲述（流程图）的并不完全一致：通过valueOf或toString方法返回的原始值将被直接使用，而不会被强制转换为数字或字符串。")])]),t._v(" "),n("h3",{attrs:{id:"_3-10-变量作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-变量作用域"}},[t._v("#")]),t._v(" 3.10 变量作用域")]),t._v(" "),n("h4",{attrs:{id:"_3-10-1-函数作用域和声明提前"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-1-函数作用域和声明提前"}},[t._v("#")]),t._v(" 3.10.1 函数作用域和声明提前")]),t._v(" "),n("p",[n("strong",[t._v("声明提前")]),t._v("是在JavaScript引擎的预编译时进行的。")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[t._v("ES6的"),n("code",[t._v("let")]),t._v("关键字所声明变量是属于块级作用域的，且不会对变量声明提前。")])]),t._v(" "),n("h4",{attrs:{id:"_3-10-2-作为属性的变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-2-作为属性的变量"}},[t._v("#")]),t._v(" 3.10.2 作为属性的变量")]),t._v(" "),n("p",[t._v("全局变量是全局对象的属性，而局部变量当做跟函数调用相关的某个对象的属性。ECMAScript 3规范称该对象为“调用对象” (call object)，ECMAScript 5规范称为“声明上下文对象” (declarative environment record)。")]),t._v(" "),n("p",[t._v("JavaScript允许this关键字引用全局对象，却没有可以引用存放局部变量的对象，这种存放局部变量的对象是我们不可见的内部实现。")]),t._v(" "),n("h4",{attrs:{id:"_3-10-3-作用域链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-3-作用域链"}},[t._v("#")]),t._v(" 3.10.3 作用域链")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn_1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn_2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fn_2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建call_fn_1_obj对象存放局部变量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn_1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call_fn_2_obj_1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call_fn_2_obj_2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(320),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"_4-表达式和运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-表达式和运算符"}},[t._v("#")]),t._v(" 4 表达式和运算符")]),t._v(" "),n("h3",{attrs:{id:"_4-7-运算符概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-运算符概述"}},[t._v("#")]),t._v(" 4.7 运算符概述")]),t._v(" "),n("h4",{attrs:{id:"_4-7-7-运算顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-7-运算顺序"}},[t._v("#")]),t._v(" 4.7.7 运算顺序")]),t._v(" "),n("p",[t._v("运算符的优先级和结合性规定复杂表达式的运算顺序，而子表达式的运算顺序总是严格按照从左到右的顺序来计算表达式的。例如：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运算顺序：o.m → o.n(=x) → a → b → a*b(=y) → x+y(=z) → o.m=z")]),t._v("\no"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("m "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b\n")])])]),n("p",[t._v("只有在任何一个表达式具有副作用而影响到其他表达式的时候，其运算顺序才有所不同：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ++运算符有副作用且影响到其他表达式")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设两个表达式的a=1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运算顺序：b → a++(=1) → a(=2) → b=1+2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 而不是：b → a(=1) → a(=1) → a++(=1) → b=1+1")]),t._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 3")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运算顺序：b → ++a(=2) → a(=2) → b=2+2")]),t._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 4")]),t._v("\n")])])]),n("h3",{attrs:{id:"_4-8-算术表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-算术表达式"}},[t._v("#")]),t._v(" 4.8 算术表达式")]),t._v(" "),n("h4",{attrs:{id:"_4-8-1-运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-1-运算符"}},[t._v("#")]),t._v(" 4.8.1 "),n("code",[t._v("+")]),t._v("运算符")]),t._v(" "),n("p",[t._v("加法运算符的类型转换规则为：")]),t._v(" "),n("ul",[n("li",[t._v("如果其中一个操作数是对象，则对象会遵循对象到原始值的转换规则转换为原始值（"),n("a",{attrs:{href:"#_3-8-3-%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%8E%9F%E5%A7%8B%E5%80%BC"}},[t._v("3.8.3节")]),t._v("）：日期对象通过toString方法进行转换，其他对象则通过valueOf方法进行转换（如果valueOf方法返回一个原始值的话），由于多数对象都不具备可用的valueOf方法或者返回的是对象，因此它们会通过toString方法进行转换。")]),t._v(" "),n("li",[t._v("在进行对象到原始值转换后，如果其中一个操作数是字符串的话，另一个操作数也会被转换为字符串，然后进行字符串连接。")]),t._v(" "),n("li",[t._v("否则，两个操作数都将转换为数字（或者NaN），然后进行加法操作。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "11"')]),t._v("\no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "11"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ns "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 2")]),t._v("\ns "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 2")]),t._v("\ns "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "11"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显式类型转换有所不同 是直接调用toString来转换的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "21"')]),t._v("\n")])])]),n("h4",{attrs:{id:"_4-8-3-位运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-3-位运算符"}},[t._v("#")]),t._v(" 4.8.3 位运算符")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("0x1234 = 1 0010 0011 0100\n0x00FF = 1111 1111\n0x0034 = 11 0100\n\n0x12FF = 1 0010 1111 1111\n\n0xFF00 = 1111 1111 0000 0000\n0xF0F0 = 1111 0000 1111 0000\n0x0FF0 = 1111 1111 0000\n")])])]),n("p",[t._v("负数在计算机内部是以补码形式存放的，所以左移右移操作实际是对补码的操作，因此负数的左移右移操作必须首先转化为补码，再进行移动。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n-7 >> 1 = [10000111] 原 >> 1\n        = [11111001] 补 >> 1 = [11111100] 补\n        = [11111011] 反 = [10000100] 原 = -4\n*/")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正数忽略余数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 负数忽略余数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若存在余数 则结果减去 1")]),t._v("\n")])])]),n("h3",{attrs:{id:"_4-9-关系表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-关系表达式"}},[t._v("#")]),t._v(" 4.9 关系表达式")]),t._v(" "),n("h4",{attrs:{id:"_4-9-1-相等和不相等运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-1-相等和不相等运算符"}},[t._v("#")]),t._v(" 4.9.1 相等和不相等运算符")]),t._v(" "),n("p",[t._v("严格相等运算符"),n("code",[t._v("===")]),t._v("首先计算其操作数的值，然后比较这两个值，比较过程没有任\n何类型转换：")]),t._v(" "),n("ul",[n("li",[t._v("如果两个值类型不相同，则它们不相等。")]),t._v(" "),n("li",[t._v("如果两个值都是null或者都是undefined，则它们相等。")]),t._v(" "),n("li",[t._v("如果两个值都是布尔值true或都是布尔值false，则它们相等。")]),t._v(" "),n("li",[t._v("如果其中一个值是NaN，或者两个值都是NaN，则它们不相等。NaN和其他任何值都是不相等的，包括它本身！通过x!==x来判断x是否为NaN，只有在x为NaN的时候，这个表达式的值才为true。")]),t._v(" "),n("li",[t._v("如果两个值为数字且数值相等，则它们相等。如果一个值为0,另一个值为-0,则它们同样相等。")]),t._v(" "),n("li",[t._v("如果两个值为字符串，且所含的对应位上的16位数（参照3.2节）完全相等，则它们相等。如果它们的长度或内容不同，则它们不等。两个字符串可能含义完全一样且所显示出的字符也一样，但具有不同编码的16位值。JavaScript并不对Unicode进行标准化的转换，因此像这样的字符串通过“===”和“==”运算符的比较结果也不相等。第三部分的String.localeCompare()提供了另外一种比较字符串的方法。")]),t._v(" "),n("li",[t._v("如果两个引用值指向同一个对象、数组或函数，则它们是相等的。如果指向不同的对象，则它们是不等的，尽管两个对象具有完全一样的属性。")])]),t._v(" "),n("p",[t._v("相等运算符"),n("code",[t._v("==")]),t._v("和恒等运算符相似，但相等运算符的比较并不严格。如果两个操作数不是同一类型，那么相等运算符会尝试进行一些类型转换，然后进行比较：")]),t._v(" "),n("ul",[n("li",[t._v("如果两个操作数的类型相同，则和上文所述的严格相等的比较规则一样。如果严格相等，那么比较结果为相等。如果它们不严格相等，则比较结果为不相等。")]),t._v(" "),n("li",[t._v("如果两个操作数类型不同，“==”相等操作符也可能会认为它们相等。检测相等将会遵守如下规则和类型转换：\n"),n("ul",[n("li",[t._v("如果一个值是null，另一个是undefined,则它们相等。")]),t._v(" "),n("li",[t._v("如果一个值是数字，另一个是字符串，先将字符串转换为数字，然后使用转换后的值进行比较。")]),t._v(" "),n("li",[t._v("如果其中一个值是true,则将其转换为1再进行比较。如果其中一个值是false，则将其转换为0再进行比较。")]),t._v(" "),n("li",[t._v("如果一个值是对象，另一个值是数字或字符串，则使用"),n("a",{attrs:{href:"#_3-8-3-%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%8E%9F%E5%A7%8B%E5%80%BC"}},[t._v("3.8.3节")]),t._v("所提到的转换规则将对象转换为原始值，然后再进行比较。对象通过toString()方法或者valueOf()方法转换为原始值。JavaScript语言核心的内置类首先尝试使用valueOf()，再尝试使用toString()，日期类除外，日期类只使用toString()转换。那些不是JavaScript语言核心中的对象则通过各自的实现中定义的方法转换为原始值。")]),t._v(" "),n("li",[t._v("其他不同类型之间的比较均不相等。")])])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true 两者转为数字1再进行比较")]),t._v("\n")])])]),n("h4",{attrs:{id:"_4-9-2-比较运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-2-比较运算符"}},[t._v("#")]),t._v(" 4.9.2 比较运算符")]),t._v(" "),n("p",[t._v("比较操作符的操作数可能是任意类型。然而，只有数字和字符串才能真正执行比较操作，因此那些不是数字和字符串的操作数都将进行类型转换，类型转换规则如下：")]),t._v(" "),n("ul",[n("li",[t._v("如果操作数为对象，那么这个对象将依照"),n("a",{attrs:{href:"#_3-8-3-%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%8E%9F%E5%A7%8B%E5%80%BC"}},[t._v("3.8.3节")]),t._v("结尾处所描述的转换规则转换为原始值：如果valueOf()返回一个原始值，那么直接使用这个原始值。否则，使用toString()的转换结果进行比较操作。日期类也不例外（使用valueOf方法转换）。")]),t._v(" "),n("li",[t._v("在对象转换为原始值之后，如果两个操作数都是字符串，那么将依照字母表的顺序对两个字符串进行比较，这里提到的“字母表顺序”是指组成这个字符串的16位Unicode字符的索引顺序。")]),t._v(" "),n("li",[t._v("在对象转换为原始值之后，如果至少有一个操作数不是字符串，那么两个操作数都将转换为数字进行数值比较。0和-0是相等的。Infinity比其他任何数字都大（除了Infinity本身），-Infinity比其他任何数字都小（除了它自身）。如果其中一个操作数是（或转换后是）NaN，那么比较操作符总是返回false。")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[t._v("字符串比较是区分大小写的，所有的大写的ASCII字母都“小于”小写的ASCII字母。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v("\nd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1581480916223")]),t._v("\nd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "Wed Feb 12 2020 12:15:16 GMT+0800 (China Standard Time)"')]),t._v("\n\nd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\nd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n\nd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\nd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设日期对象使用toString转换 那关系表达式应该会返回true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但实际返回false 所以日期是使用valueOf转换的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关系表达式等价于1581480916223>NaN的比较")]),t._v("\nd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Wed Feb 12 2020 12:15:16 GMT+0800 (China Standard TimE)"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[t._v("由上可见，比较运算符（包括"),n("code",[t._v("==")]),t._v("运算符）更偏爱数字，只有两边操作数都是字符串时，才会进行字符串的比较。而加法运算符则更偏爱字符串，只要其中一个操作数为字符串，就进行字符串连接操作。")]),t._v(" "),n("p",[t._v("由Unicode定义的字符编码顺序和任何特定语言或者本地语言字符集中的传统字符编码顺序不尽相同，String.localCompare()方法更加健壮可靠，这个方法参照本地语言的字母表定义的字符次序。")])]),t._v(" "),n("p",[t._v("最后，需要注意的是“<=”（小于等于）和“>=”（大于等于）运算符在判断相等的时候，并不依赖于相等运算符和严格相等运算符的比较规则。相反，小于等于运算符只是简单的“不大于”，大于等于运算符也只是“不小于”。如果一个操作数是（或者转换后是）NaN的时候，所有4个比较运算符均返回false。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null转换为0 undefined转换为NaN")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不依赖于相等运算符的转换规则")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n")])])]),n("h4",{attrs:{id:"_4-9-4-instanceof运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-4-instanceof运算符"}},[t._v("#")]),t._v(" 4.9.4 "),n("code",[t._v("instanceof")]),t._v("运算符")]),t._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("纠正")]),t._v(" "),n("p",[n("em",[t._v("Page 78")]),t._v(" -> 为了计算表达式"),n("code",[t._v("o instanceof f")]),t._v("，JavaScript首先计算f.prototype，然后在o的原型链中查找f.prototype，如果找到，那么o是f（或者f的父类）的一个实例，表达式返回true。如果f.prototype不在o的原型链中的话,那么o就不是f的实例，instanceof返回false。")])]),t._v(" "),n("p",[t._v("对象o中存在一个隐藏的成员，这个成员指向其父类的原型，如果父类的原型是另外一个类的实例的话，则这个原型对象中也存在一个隐藏成员指向另外一个类的原型，这种链条将许多对象或类串接起来，既是原型链，原文所讲f.prototype不在o的原型链中也就是说f和o没有派生关系。")]),t._v(" "),n("h3",{attrs:{id:"_4-12-表达式计算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-12-表达式计算"}},[t._v("#")]),t._v(" 4.12 表达式计算")]),t._v(" "),n("h4",{attrs:{id:"_4-12-1-eval"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-12-1-eval"}},[t._v("#")]),t._v(" 4.12.1 eval()")]),t._v(" "),n("p",[t._v("eval()只有一个参数。如果传入的参数不是字符串，它直接返回这个参数。如果参数是字符串，它会把字符串当成JavaScript代码进行编译，如果编译失败则抛出语法错误异常。如果编译成功，则开始执行这段代码，并返回字符串中的最后一个表达式或语句的值。如果执行过程抛出异常，eval方法会将这个异常传递出去。")]),t._v(" "),n("p",[t._v("eval的字符串执行时的上下文环境和调用eval函数的上下文环境是一样的。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var x = 1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(x); // ReferenceError: x is not defined")]),t._v("\n")])])]),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("纠正")]),t._v(" "),n("p",[n("em",[t._v("Page 84")]),t._v(" -> 执行eval(a)的上下文是局部的")])]),t._v(" "),n("h4",{attrs:{id:"_4-12-2-全局eval"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-12-2-全局eval"}},[t._v("#")]),t._v(" 4.12.2 全局eval()")]),t._v(" "),n("p",[t._v("eval()具有更改局部变量的能力，这对于JavaScript优化器来说是一个很大的问题。JavaScript解释器针对那些调用了eval()的函数所做的优化并不多。")]),t._v(" "),n("p",[t._v("实际上，当通过别名调用时，eval()会将其字符串当成顶层的全局代码来执行。执行的代码可能会定义新的全局变姓和全局函数，或者给全局变量赋值，但却不能使用或修改函数中的局部变量，因此，这不会影响到函数内的代码优化。")]),t._v(" "),n("p",[t._v("直接调用eval()时（此时称eval为“直接eval”），它总是在调用它的上下文作用域内执行。而间接调用eval（称为“全局eval”）则使用全局对象作为其上下文作用域，并且无法读、写、定义局部变量和函数。下面有一段示例代码：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" geval "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" eval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用別名调用eval将是全局eval")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"x += 'changed';\"")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回更改后的局部变量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个函数内执行了全局eval")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("geval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"y += 'changed';\"")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 间接调用改变了全局变量的值")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回未更改的局部变量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 更改了局部变量：输出"localchanged global"')]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 更改了全局变量：输出"local globalchanged"')]),t._v("\n")])])]),n("h4",{attrs:{id:"_4-12-3-严格eval"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-12-3-严格eval"}},[t._v("#")]),t._v(" 4.12.3 严格eval()")]),t._v(" "),n("p",[t._v("ES5严格模式对eval()函数的行为施加了更多的限制，甚至对标识符eval的使用也施加了限制。当在严格模式下调用eval()时，或者eval()执行的代码段以"),n("code",[t._v('"use strict"')]),t._v("指令开始，此时的eval()是私有上下文环境中的局部eval。也就是说，在严格模式下，eval执行的代码段可以査询或更改局部变量，但不能在局部作用域中定义新的变量或函数。")]),t._v(" "),n("p",[t._v("此外，严格模式将eval列为保留字，这让eval()更像一个运算符。不能用一个别名覆盖eval()函数。并且变量名、函数名、函数参数或者异常捕获的参数都不能取名为eval。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"local"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以修改局部变量 但不能创建新的变量")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"x += 'changed'; var y = 1;\"")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "localchanged"')]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "undefined"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" geval "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" eval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("geval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"use strict" ;var y = "global";\'')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "undefined"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("geval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var y = \"global\";'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "global"')]),t._v("\n")])])]),n("h3",{attrs:{id:"_4-13-其他运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-13-其他运算符"}},[t._v("#")]),t._v(" 4.13 其他运算符")]),t._v(" "),n("h4",{attrs:{id:"_4-13-2-typeof运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-13-2-typeof运算符"}},[t._v("#")]),t._v(" 4.13.2 typeof运算符")]),t._v(" "),n("p",[t._v("typeof运算符的返回值：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("x")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("typeof x")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("undefined")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('"undefined"')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("null")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('"object"')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("true或false")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('"boolean"')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("任意数字或NaN")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('"number"')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("任意字符串")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('"string"')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("任意函数")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('"function"')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("任意数组")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('"object"')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("任意内置对象（非函数）")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('"object"')])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("任意宿主对象")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v('由编译器各自实现的字符串，但不是"undefined"、"boolean"、"number"或"string"')])])])]),t._v(" "),n("p",[t._v("所有的函数都是可调用的 (callable)，但并非所有可调用的都是函数，即“可调用的对象” (callable object)，它可以像函数一样被调用，但并不是一个真正的函数。")]),t._v(" "),n("p",[t._v("例如，IE Web浏览器（IE8及之前的版本）实现了客户端方法（诸如window.alert()和document.getElementById()），使用了可调用的宿主对象，而不是内置函数对象。它们本质上不是Function对象。但IE9将它们实现为真正的函数，因此这类可调用的对象将越来越罕见。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IE8及之前的版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alert "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "object"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getElementById "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => "object"')]),t._v("\n")])])]),n("h4",{attrs:{id:"_4-13-3-delete运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-13-3-delete运算符"}},[t._v("#")]),t._v(" 4.13.3 delete运算符")]),t._v(" "),n("ul",[n("li",[t._v("如果操作数不是左值，不做任何操作并返回true。")]),t._v(" "),n("li",[t._v("在ECMAScript5严格模式下，如果操作数是变量、函数或函数参数，将抛出一个语法错误异常。如果删除的是不可配置属性，将抛出类型错误异常。")]),t._v(" "),n("li",[t._v("在非严格模式下，诸如var变量、函数、函数参数以及不可配置属性，delete操作都不会抛出异常，只是简单地返回false，以表明不能执行删除操作。")]),t._v(" "),n("li",[t._v("其他操作数的删除操作，返回true。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => false")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以删除eval下的var变量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var y = 2; delete y;"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抛出SyntaxError异常")]),t._v("\n")])])]),n("h2",{attrs:{id:"_5-语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-语句"}},[t._v("#")]),t._v(" 5 语句")]),t._v(" "),n("h3",{attrs:{id:"_5-2-复合语句和空语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-复合语句和空语句"}},[t._v("#")]),t._v(" 5.2 复合语句和空语句")]),t._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("纠正")]),t._v(" "),n("p",[n("em",[t._v("Page 93")]),t._v(" -> 块中的原始语句结尾的分号不是必须的")])]),t._v(" "),n("h3",{attrs:{id:"_5-3-声明语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-声明语句"}},[t._v("#")]),t._v(" 5.3 声明语句")]),t._v(" "),n("h4",{attrs:{id:"_5-3-2-function"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2-function"}},[t._v("#")]),t._v(" 5.3.2 function")]),t._v(" "),n("p",[t._v("函数声明语句和函数定义表达式同样都有函数名，两种方式都创建了新的函数对象。不同的是，通过函数定义表达式只有var声明变量“提前”到了脚本或函数的顶部，变量的初始化代码仍然在原来的位置。而使用函数声明语句的话，函数名称和函数体均提前到了脚本或函数的顶部，函数名称就是指向这个函数对象的变量名，因此它们在整个脚本和函数内都是可调用的，也就是说，可以在一个声明函数语句之前调用这个函数。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => undefined")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => f函数对象")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f函数体提升到语句块顶部 变量名提升到脚本顶部")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并不等价于var f = function() {}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => f函数对象")]),t._v("\n")])])]),n("h3",{attrs:{id:"_5-5-循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-循环"}},[t._v("#")]),t._v(" 5.5 循环")]),t._v(" "),n("h4",{attrs:{id:"_5-5-3-for"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-3-for"}},[t._v("#")]),t._v(" 5.5.3 for")]),t._v(" "),n("p",[t._v("与"),n("code",[t._v("while(true)")]),t._v("类似，死循环的另外一种写法是"),n("code",[t._v("for(;;)")]),t._v("。")]),t._v(" "),n("h4",{attrs:{id:"_5-5-4-for-in"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-4-for-in"}},[t._v("#")]),t._v(" 5.5.4 for/in")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  statement\n")])])]),n("p",[t._v("在执行for/in语句的过程中，JavaScript解释器首先计算object表达式：")]),t._v(" "),n("ul",[n("li",[t._v("如果表达式为null或者undefined，它将会跳过循环并执行后续的代码（ES3的实现可能抛出类型错误异常）。")]),t._v(" "),n("li",[t._v("如果表达式等于一个原始值，这个原始值将会转换为与之对应的包装对象。")]),t._v(" "),n("li",[t._v("否则，表达式本身就是对象。")])]),t._v(" "),n("p",[t._v("然后，JavaScript会依次枚举对象的属性来执行循环。每次循环之前，都会先计算variable表达式的值，并赋值给variable。例如：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* empty */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("其实，for/in循环并不是对所有的对象属性都遍历，只有“可枚举” (enumerable) 的属性才会遍历。代码中自定义的所有属性和方法都是可枚举的（在ECMAScript5中可以通过特殊手段让可枚举属性变为不可枚举）。对象可以继承其他对象的属性，那些继承的自定义属性也是可以枚举的。")]),t._v(" "),n("p",[t._v("for/in中不可枚举的属性有：")]),t._v(" "),n("ul",[n("li",[t._v("JavaScript核心定义的内置方法，例如toString方法。")]),t._v(" "),n("li",[t._v("很多内置对象的属性也是“不可枚举的”。")]),t._v(" "),n("li",[t._v("在循环体中删除的未枚举的属性。")]),t._v(" "),n("li",[t._v("在循环体中对象新定义的属性（有些实现是可以枚举那些在循环体中增加的继承属性的）。")])]),t._v(" "),n("p",[t._v("ECMAScript规范并没有指定for/in循环按照何种顺序来枚举对象属性。但实际上，主流浏览器厂商是按照属性定义的先后顺序来枚举简单对象的属性，先定义的属性先枚举。如果使用对象直接量的形式创建对象，则将按照直接量中属性的出现顺序枚举。而以下情况的枚举顺序取决于浏览器的具体实现：")]),t._v(" "),n("ul",[n("li",[t._v("对象继承的可枚举属性；")]),t._v(" "),n("li",[t._v("对象具有整数数组索引的属性；")]),t._v(" "),n("li",[t._v("使用delete删除了对象已有的属性；")]),t._v(" "),n("li",[t._v("使用Object.defineProperty()或者类似的方法改变的对象属性。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Chrome实现的枚举顺序为0->1->2->b->a")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("除了对象所有非继承的“自有”属性外，还有继承的“自有”属性往往（并非所有实现）都是可枚举的，而且按照它们定义的顺序进行枚举。另外还有一些（也是并非所有实现）实现依照数字顺序来枚举数组属性，但当数组元素的索引是非数字或数组是稀疏数组时却按照指定顺序来枚举。")]),t._v(" "),n("h3",{attrs:{id:"_5-6-跳转"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-跳转"}},[t._v("#")]),t._v(" 5.6 跳转")]),t._v(" "),n("h4",{attrs:{id:"_5-6-1-标签语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-1-标签语句"}},[t._v("#")]),t._v(" 5.6.1 标签语句")]),t._v(" "),n("p",[t._v("标签的identifier必须是一个合法的JavaScript标识符，而不能是一个保留字。标签的命名空间和变量或函数的命名空间是不同的，因此可以使用同一个标识符作为语句标签和变量名或函数名。")]),t._v(" "),n("p",[t._v("语句标签只有在引用的语句内（包括子句中）是有定义的。一个语句标签不能和它内部的语句标签重名，但在互不相嵌套的两个代码段是可以出现同名的语句标签的。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" identifier "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nidentifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'statement'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nidentifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  test"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 带有标签的语句还可以带有标签 任何语句可以有很多个标签")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("break")]),t._v("和"),n("code",[t._v("continue")]),t._v("是JavaScript中唯一可以使用语句标签的语句。")]),t._v(" "),n("h4",{attrs:{id:"_5-6-2-break语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-2-break语句"}},[t._v("#")]),t._v(" 5.6.2 break语句")]),t._v(" "),n("p",[t._v("当break和标签一块使用时，程序将跳转到这个标签所标识的语句块的结束，或者直接终止这个闭合语句块的执行。当没有任何闭合语句块指定了break所用的标签，这时会产生一个语法错误。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("identifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" identifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never run'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\na"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  b"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never run'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("需要注意的是，不管break语句是否带标签，它的控制权都无法越过函数的边界：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("identifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" identifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译失败")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"_5-6-3-continue语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-3-continue语句"}},[t._v("#")]),t._v(" 5.6.3 continue语句")]),t._v(" "),n("p",[t._v("不管continue语句是否带标签，它只能在循环体内使用。否则将会报语法错误。")]),t._v(" "),n("p",[t._v("continue语句在while循环中会直接进入下轮循环的条件判断，而for循环在进入下轮循环之前，首先计算其自增表达式，然后判断循环条件。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// continue语句在使用while循环不可能完美地模拟等价的for循环")]),t._v("\n\nidentifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// j始终为0")]),t._v("\n    loop"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 带标签跳到其他循环时并不会j++")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果跳到loop才会j++")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v(" identifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nidentifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// j首先为0 然后为1")]),t._v("\n    j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v(" identifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"_5-6-5-throw语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-5-throw语句"}},[t._v("#")]),t._v(" 5.6.5 throw语句")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// throw可以显式抛出任意类型异常")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'异常'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SyntaxError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'语法错误'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ne"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'异常类型'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ne"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'异常消息'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"_5-6-6-try-catch-finally语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-6-try-catch-finally语句"}},[t._v("#")]),t._v(" 5.6.6 try/catch/finally语句")]),t._v(" "),n("p",[t._v("终止try语句块的方式有：")]),t._v(" "),n("ul",[n("li",[t._v("执行完语句块的最后一条语句之后正常终止")]),t._v(" "),n("li",[t._v("通过break、continue或return语句终止")]),t._v(" "),n("li",[t._v("抛出一个异常")])]),t._v(" "),n("p",[t._v("如果try语句块使用return、continue或break语句使程序发生跳转，那么都会先执行finally块（如果存在的话）中的逻辑。")]),t._v(" "),n("p",[t._v("如果finally块使用return、continue、break或者throw语句使程序发生跳转，或者通过调用一个抛出异常的方法使其跳转，不管这个跳转使程序挂起 (pending) 还是执行这个跳转，解释器都会抛弃之前的跳转。例如，如果finally抛出一个异常，这个异常将替代正在抛出的异常。如果finally执行到return语句，尽管已经抛出了异常且这个抛出的异常还没有处理，这个方法依然会正常返回。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解释器会将其忽略")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个跳转将被抛弃 抛出异常也是一样")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1")]),t._v("\n")])])]),n("hr"),t._v(" "),n("p",[t._v("我们无法完全精确地使用while循环来模拟for循环，因为continue语句在两个循环中的行为表现不一致。如果使用try/finally语句，就能使用while循环来正确模拟包含continue（不带标签）的for循环：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("然而，如果continue带标签，则无法完美地模拟："),n("a",{attrs:{href:"#_5-6-3-continue%E8%AF%AD%E5%8F%A5"}},[t._v("(5.6.3节)")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("identifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// j首先为0 然后为1")]),t._v("\n    j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v(" identifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("当循环体中包含break语句时，while循环和for循环便有了更微妙的区別：在for循环中不会执行自增运算，而while循环则会多执行一次额外的自增运算。因此即便使用了finally从句，使用while来完全模拟for循环依然是不可能的。")]),t._v(" "),n("h3",{attrs:{id:"_5-7-其他语句类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-其他语句类型"}},[t._v("#")]),t._v(" 5.7 其他语句类型")]),t._v(" "),n("h4",{attrs:{id:"_5-7-1-with语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-1-with语句"}},[t._v("#")]),t._v(" 5.7.1 with语句")]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),n("p",[t._v("在严格模式中是禁止使用with语句的，并且在非严格模式里也是不推荐使用with语句的。那些使用with语句的JavaScript代码非常难于优化，并且与没有使用with语句的代码相比，它运行得更慢。")])]),t._v(" "),n("p",[n("code",[t._v("with(o) x = 1;")])]),t._v(" "),n("p",[t._v("如果对象o有一个属性x，那么这行代码给这个属性赋值为1。但如果o中没有定义属性x，这段代码与不使用with语句的x=1是完全一样的。只有在査找标识符时才会用到作用域链，而创建新的变量时不会使用它，而是会给一个局部变量或者全局变量赋值，或者创建全局对象的一个新属性。with语句提供了一种读取属性的快捷方式，但它并不能创建新属性。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"_5-7-3-use-strict-指令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-3-use-strict-指令"}},[t._v("#")]),t._v(' 5.7.3 "use strict"指令')]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指令为字符串直接量 只能出现在脚本或函数体开始")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果在常规语句之后出现字符串直接量表达式语句 则当做普通语句对待")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不是一条指令")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果在严格模式下with语句会报SyntaxError")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里不报SyntaxError 表明不在严格模式下")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* empty */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"其他指令"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抛出SyntaxError异常")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* empty */")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("ECMAScript 5中的严格模式是该语言中一个受限制的子集，它修正了语言的重要缺陷，并提供健壮的査错功能和增强的安全机制。严格模式和非严格模式之间的区别如下（前三条尤为重要）：")]),t._v(" "),n("ul",[n("li",[t._v("在严格模式中，禁止使用with语句。"),n("a",{attrs:{href:"#_5-7-1-with%E8%AF%AD%E5%8F%A5"}},[t._v("(5.7.1节)")])]),t._v(" "),n("li",[t._v("在严格模式中，所有变量必须先声明，否则将会抛出一个引用错误异常。（在非严格模式中，会隐式声明为一个全局变量，即给全局对象添加一个新属性）。")]),t._v(" "),n("li",[t._v("在严格模式中，调用函数（不是方法）中的this值为undefined。（在非严格模式中，调用函数中的this值为全局对象）。可以利用这种特性来判断JavaScript实现是否支持严格模式："),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hasStrictMode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("在严格模式中，当通过call()或apply()来调用函数时，其中this值就是通过call()或apply()传入的第一个参数。（在非严格模式或ECMAScript 3中，参数null和undefined会替换成全局对象作为this值，而原始值会转成对应的包装对象）。")]),t._v(" "),n("li",[t._v("在严格模式中，赋值给只读属性和给不可扩展的对象创建新成员都将抛出一个类型错误异常。（在非严格模式中，只是简单地操作失败，并不会报错）。")]),t._v(" "),n("li",[t._v("在严格模式中，传入eval()的代码段不能在调用eval的上下文作用域中声明变量或定义函数（在非严格模式中是可以这样做的）。这些变量和函数的定义是在eval()创建的新作用域中，当eval()返回时，这个作用域就会被抛弃。"),n("a",{attrs:{href:"#_4-12-3-%E4%B8%A5%E6%A0%BCeval"}},[t._v("(4.12.3节)")]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var x = 1;"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => undefined")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("在严格模式中，函数里的arguments对象保存了一份函数实参的静态副本。（在非严格模式中，arguments对象拥有“魔术般”的行为，arguments类数组对象的元素与函数参数都引用同一个值）。"),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 0")]),t._v("\n  x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 0")]),t._v("\n  x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("在严格模式中，当delete运算符的操作数是诸如变量、函数或函数参数这些标识符时，将会抛出一个语法错误异常。（在非严格模式中，这些delete表达式不做任何操作，并返回false）。")]),t._v(" "),n("li",[t._v("在严格模式中，试图删除一个不可配置属性将抛出一个类型错误异常。（在非严格模式中，delete表达式操作失败，并返回false）。"),n("a",{attrs:{href:"#_4-13-3-delete%E8%BF%90%E7%AE%97%E7%AC%A6"}},[t._v("(4.13.3节)")])]),t._v(" "),n("li",[t._v("在严格模式中，在对象直接量中定义两个或多个同名属性将产生一个语法错误。（在非严格模式中不会报错）。")]),t._v(" "),n("li",[t._v("在严格模式中，在函数声明中存在两个或多个同名参数将产生一个语法错误。（在非严格模式中不会报错）。")]),t._v(" "),n("li",[t._v("在严格模式中，不允许使用八进制的整数直接量（以0为前缀，而不是0x）。（在非严格模式中，某些实现是允许八进制直接量的）。")]),t._v(" "),n("li",[t._v("在严格模式中，标识符eval和arguments会当成关键字，它们的值是不允许更改的。不能给这些标识符赋值，也不能将它们声明为变量以及作为函数名、函数参数或catch块的标识符来使用。")]),t._v(" "),n("li",[t._v("在严格模式中，调用栈的检查能力被限制使用。使用arguments.caller（某些实现已废弃该属性）和arguments.callee方法将抛出一个类型错误异常。当读取函数的caller和arguments属性时也将抛出类型错误异常。（某些实现在非严格模式中定义了这些非标准的属性）。"),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arguments "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 抛出TypeError")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);